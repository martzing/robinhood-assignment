// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MyBcrypt is an autogenerated mock type for the MyBcrypt type
type MyBcrypt struct {
	mock.Mock
}

// CompareHashAndPassword provides a mock function with given fields: hashedPassword, password
func (_m *MyBcrypt) CompareHashAndPassword(hashedPassword string, password string) error {
	ret := _m.Called(hashedPassword, password)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(hashedPassword, password)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GenerateFromPassword provides a mock function with given fields: password, cost
func (_m *MyBcrypt) GenerateFromPassword(password string, cost int) (*string, error) {
	ret := _m.Called(password, cost)

	var r0 *string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, int) (*string, error)); ok {
		return rf(password, cost)
	}
	if rf, ok := ret.Get(0).(func(string, int) *string); ok {
		r0 = rf(password, cost)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*string)
		}
	}

	if rf, ok := ret.Get(1).(func(string, int) error); ok {
		r1 = rf(password, cost)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMyBcrypt interface {
	mock.TestingT
	Cleanup(func())
}

// NewMyBcrypt creates a new instance of MyBcrypt. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMyBcrypt(t mockConstructorTestingTNewMyBcrypt) *MyBcrypt {
	mock := &MyBcrypt{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
